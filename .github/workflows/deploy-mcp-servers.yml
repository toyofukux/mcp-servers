name: Deploy MCP Servers to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required global secrets
        id: check-global-secrets
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          missing_secrets=""

          if [[ -z "$GCP_CREDENTIALS" ]]; then
            missing_secrets="${missing_secrets} GCP_CREDENTIALS"
          fi

          if [[ -z "$GCP_REGION" ]]; then
            missing_secrets="${missing_secrets} GCP_REGION"
          fi

          if [[ ! -z "$missing_secrets" ]]; then
            echo "::error::Missing required global secrets:${missing_secrets}"
            exit 1
          else
            echo "All required global secrets are available"
          fi

  deploy:
    needs: validate-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: "auth"
        name: "Google Cloud Authentication"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Google Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Enable necessary APIs"
        run: |
          gcloud services enable artifactregistry.googleapis.com
          gcloud services enable run.googleapis.com

      # Artifact Registryリポジトリの自動作成（存在すればスキップ）
      - name: "Create Artifact Registry repositories if not exist"
        env:
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          LOCATION=$GCP_REGION

          for REPO in github-mcp-server notion-mcp-server; do
            if ! gcloud artifacts repositories describe $REPO --location=$LOCATION >/dev/null 2>&1; then
              echo "Creating Artifact Registry repo: $REPO"
              gcloud artifacts repositories create $REPO \
                --repository-format=docker \
                --location=$LOCATION \
                --description="MCP Docker repo: $REPO"
            else
              echo "Artifact Registry repo $REPO already exists"
            fi
          done

      - name: "Configure Artifact Registry Docker authentication"
        env:
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      # 以降は「github-mcp-server」/「notion-mcp-server」両方Artifact Registryにpush
      - name: Get GitHub MCP server version
        id: github-version
        run: |
          VERSION=$(cat mcps/github/version.txt)
          if [[ -z "$VERSION" ]]; then
            echo "::error::GitHub MCP server version is empty: mcps/github/version.txt"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "GitHub MCP server version: $VERSION"

      - name: Check GitHub secrets
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          if [[ -z "$GH_PERSONAL_ACCESS_TOKEN" ]]; then
            echo "::error::Missing required secret for GitHub MCP server: GH_PERSONAL_ACCESS_TOKEN"
            exit 1
          fi

      - name: Get Notion MCP server version
        id: notion-version
        run: |
          VERSION=$(cat mcps/notion/version.txt)
          if [[ -z "$VERSION" ]]; then
            echo "::error::Notion MCP server version is empty: mcps/notion/version.txt"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Notion MCP server version: $VERSION"

      - name: Check Notion secrets
        env:
          NOTION_API_TOKEN: ${{ secrets.NOTION_API_TOKEN }}
        run: |
          if [[ -z "$NOTION_API_TOKEN" ]]; then
            echo "::error::Missing required secret for Notion MCP server: NOTION_API_TOKEN"
            exit 1
          fi

      #   - name: Push GitHub MCP Server image to Artifact Registry
      #     id: push-github-image
      #     env:
      #       VERSION: ${{ steps.github-version.outputs.version }}
      #       GCP_REGION: ${{ secrets.GCP_REGION }}
      #     run: |
      #       echo "Preparing GitHub MCP server image"
      #       IMAGE=$(cat mcps/github/docker-image.txt)
      #       SOURCE_IMAGE="${IMAGE}:${VERSION}"
      #       PROJECT_ID=$(gcloud config get-value project)
      #       ARTIFACT_IMAGE="$GCP_REGION-docker.pkg.dev/$PROJECT_ID/github-mcp-server/github-mcp-server:$VERSION"
      #       echo "Source image: $SOURCE_IMAGE"
      #       echo "Target Artifact Registry image: $ARTIFACT_IMAGE"

      #       docker pull $SOURCE_IMAGE
      #       docker tag $SOURCE_IMAGE $ARTIFACT_IMAGE
      #       docker push $ARTIFACT_IMAGE

      #       echo "artifact_image=$ARTIFACT_IMAGE" >> $GITHUB_OUTPUT

      #   - name: Deploy GitHub MCP Server
      #     env:
      #       VERSION: ${{ steps.github-version.outputs.version }}
      #       GCP_REGION: ${{ secrets.GCP_REGION }}
      #       GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      #     run: |
      #       echo "Deploying GitHub MCP server"
      #       DEPLOY_IMAGE="${{ steps.push-github-image.outputs.artifact_image }}"
      #       SERVICE_NAME="mcp-github"

      #       gcloud run deploy $SERVICE_NAME \
      #         --image $DEPLOY_IMAGE \
      #         --platform managed \
      #         --region $GCP_REGION \
      #         --memory 512Mi \
      #         --min-instances 0 \
      #         --max-instances 1 \
      #         --cpu 1 \
      #         --port 8080 \
      #         --timeout 3600 \
      #         --no-allow-unauthenticated \
      #         --set-env-vars="GITHUB_PERSONAL_ACCESS_TOKEN=$GH_PERSONAL_ACCESS_TOKEN" \
      #         --command "github-mcp-server server"

      - name: Push Notion MCP Server image to Artifact Registry
        id: push-notion-image
        env:
          VERSION: ${{ steps.notion-version.outputs.version }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          echo "Preparing Notion MCP server image"
          IMAGE=$(cat mcps/notion/docker-image.txt)
          SOURCE_IMAGE="${IMAGE}:${VERSION}"
          PROJECT_ID=$(gcloud config get-value project)
          ARTIFACT_IMAGE="$GCP_REGION-docker.pkg.dev/$PROJECT_ID/notion-mcp-server/notion-mcp-server:$VERSION"
          echo "Source image: $SOURCE_IMAGE"
          echo "Target Artifact Registry image: $ARTIFACT_IMAGE"

          docker pull $SOURCE_IMAGE
          docker tag $SOURCE_IMAGE $ARTIFACT_IMAGE
          docker push $ARTIFACT_IMAGE

          echo "artifact_image=$ARTIFACT_IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy Notion MCP Server
        env:
          VERSION: ${{ steps.notion-version.outputs.version }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          NOTION_API_TOKEN: ${{ secrets.NOTION_API_TOKEN }}
        run: |
          echo "Deploying Notion MCP server"
          DEPLOY_IMAGE="${{ steps.push-notion-image.outputs.artifact_image }}"
          SERVICE_NAME="mcp-notion"

          NOTION_HEADERS='{"Authorization":"Bearer '"$NOTION_API_TOKEN"'","Notion-Version":"2022-06-28"}'
          ESCAPED_HEADERS=$(echo "$NOTION_HEADERS" | sed -e 's/,/\\,/g' -e 's/=/\\=/g')

          echo "---- raw JSON ----"
          printf '%s\n' "$NOTION_HEADERS"

          echo "---- after sed ----"
          printf '%s\n' "$ESCAPED_HEADERS"

          printf 'OPENAPI_MCP_HEADERS=%s\n' "$NOTION_HEADERS" > env.txt
          echo "---- env.txt ----"
          cat env.txt

          gcloud run deploy $SERVICE_NAME \
            --image $DEPLOY_IMAGE \
            --platform managed \
            --region $GCP_REGION \
            --memory 512Mi \
            --min-instances 0 \
            --max-instances 1 \
            --cpu 1 \
            --port 8080 \
            --timeout 3600 \
            --no-allow-unauthenticated \
            --env-vars-file=env.txt

# ※必要に応じて新サーバー追加時は同様に追記
